@model Assingnement.Data.ViewModel.CarEditVM

@{
    bool isNewRecord = Model == null || Model.Id == Guid.Empty;
    string name = "Car";

    var modelList = (List<SelectListItem>)ViewData["ModelList"] ?? new List<SelectListItem>();
    var ownerList = (List<SelectListItem>)ViewData["OwnerList"] ?? new List<SelectListItem>();

    if (!isNewRecord)
    {
        var selectedModel = modelList.Where(a => a.Value == Model.Rec.ModelId.ToString().ToUpper()).FirstOrDefault();
        modelList.Remove(selectedModel);
        selectedModel.Selected = true;
        modelList.Add(selectedModel);
        modelList = modelList.OrderBy(o => o.Text).ToList();

        var selectedOwner = ownerList.Where(a => a.Value == Model.Rec.OwnerId.ToString().ToUpper()).FirstOrDefault();
        ownerList.Remove(selectedOwner);
        selectedOwner.Selected = true;
        ownerList.Add(selectedOwner);
        ownerList = ownerList.OrderBy(o => o.Text).ToList();
    }

}

@if (isNewRecord)
{
    <h2>New @name</h2>
}
else
{
    <h2>Edit @name</h2>
}

@using (Html.BeginForm("edit"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.GeneralError)

    <div class="form-group">
        @Html.LabelFor(model => model.Rec.RegistrationNumber)
        @Html.EditorFor(model => model.Rec.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Rec.RegistrationNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rec.BoughtYear)
        @Html.EditorFor(model => model.Rec.BoughtYear, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Rec.BoughtYear, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModelIdStr)
        @Html.DropDownListFor(model => model.ModelIdStr, modelList, "", new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ModelIdStr, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OwnerIdStr)
        @Html.DropDownListFor(model => model.OwnerIdStr, ownerList, "", new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.OwnerIdStr, "", new { @class = "text-danger" })
    </div>

    @Html.Hidden("Rec.Id", Model.Id)

    <input type="submit" value="@(!isNewRecord? "Update": "Create")" class="btn btn-success btn-lg" />
}

<br />

<div>
    @Html.ActionLink("Back to List", "Index", name)
    <br />
    @if (!isNewRecord)
    {
        @Html.ActionLink("Delete", "Delete", name, new { id = Model.Id })
    }
</div>

<br />

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
